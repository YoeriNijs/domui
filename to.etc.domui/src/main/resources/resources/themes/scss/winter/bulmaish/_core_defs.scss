@import "../variables";

$control-radius: $radius !default;
$control-radius-small: $radius-small !default;

$control-padding-vertical: calc(0.375em - 1px) !default;
$control-padding-horizontal: calc(0.625em - 1px) !default;

@mixin ui-beveled-border {
	border: 1px solid $bevel_down;
	border-top-color: $bevel_up;
}

@mixin ui-appearance-none {
	-webkit-appearance: none;
	-moz-appearance: none;
}

@mixin ui-control-base {
	-moz-appearance: none;
	-webkit-appearance: none;
	align-items: center;
	border: 1px solid transparent;
	border-radius: $control-radius;
	box-shadow: none;
	display: inline-flex;
	font-size: $size-normal;
	height: 2.25em;
	justify-content: flex-start;
	line-height: $input-line-height;
	padding: $control-padding-vertical $control-padding-horizontal;
	position: relative;
	vertical-align: top;

	// States
	&:focus,
	&.is-focused,
	&:active,
	&.is-active {
		outline: none;
	}

	&[disabled] {
		cursor: not-allowed;
	}
}

@mixin ui-input-base {
	@include ui-appearance-none;
	@include ui-control-base;
	@include ui-focus-border;

	padding: $control-padding-vertical $control-padding-horizontal;

	line-height: $input-line-height;
	height: 2.25em;
	border: 1px solid $border; // $input-border-color;
	border-radius: 3px;
	font-size: 1rem;
	font-family: $font-family;				// 20170913 Needed because this is unset in the browser??
	box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);
}

@mixin ui-focus-border {
	&:focus {
		border-color: #3273dc;
		box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);
		z-index: 2;
	}
}

/** Common mixins **/
@mixin border-radius($radius) {
	-khtml-border-radius: $radius;
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

@mixin unselectable {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

@mixin loader {
	animation: spinAround 500ms infinite linear;
	border: 2px solid $border;
	border-radius: 290486px;
	border-right-color: transparent;
	border-top-color: transparent;
	content: "";
	display: block;
	height: 1em;
	position: relative;
	width: 1em;
}

@mixin arrow($color) {
	border: 1px solid $color;
	border-right: 0;
	border-top: 0;
	content: " ";
	display: block;
	height: 0.5em;
	pointer-events: none;
	position: absolute;
	transform: rotate(-45deg);
	width: 0.5em;
}

@mixin center($width, $height: 0) {
	position: absolute;

	@if $height != 0 {
		left: calc(50% - (#{$width} / 2));
		top: calc(50% - (#{$height} / 2));
	}
	@else {
		left: calc(50% - (#{$width} / 2));
		top: calc(50% - (#{$width} / 2));
	}
}

